{"version":3,"file":"ILogger.js","sourceRoot":"","sources":["../../src/ILogger.ts"],"names":[],"mappings":";AAAA,sDAAsD;AACtD,+GAA+G;;AAE/G,2GAA2G;AAC3G,IAAY,QAQX;AARD,WAAY,QAAQ;IAChB,yCAAS,CAAA;IACT,yCAAS,CAAA;IACT,qDAAe,CAAA;IACf,6CAAW,CAAA;IACX,yCAAS,CAAA;IACT,+CAAY,CAAA;IACZ,uCAAQ,CAAA;AACZ,CAAC,EARW,QAAQ,GAAR,gBAAQ,KAAR,gBAAQ,QAQnB","sourcesContent":["// Copyright (c) .NET Foundation. All rights reserved.\r\n// Licensed under the Apache License, Version 2.0. See License.txt in the project root for license information.\r\n\r\n// These values are designed to match the ASP.NET Log Levels since that's the pattern we're emulating here.\r\nexport enum LogLevel {\r\n    Trace = 0,\r\n    Debug = 1,\r\n    Information = 2,\r\n    Warning = 3,\r\n    Error = 4,\r\n    Critical = 5,\r\n    None = 6,\r\n}\r\n\r\nexport interface ILogger {\r\n    log(logLevel: LogLevel, message: string): void;\r\n}\r\n"]}